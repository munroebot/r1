# distributed dot-bashrc file
# last modified: 2011-01-12

export GPG_HOME=/usr/local/gnupg-1.4.10
export MYSQL_HOME=/usr/local/mysql
export JYTHON_HOME=$HOME/jython-2.5.1
export M2_HOME=$HOME/apache-maven-2.2.1
export GIT_UTIL_HOME=$HOME/r1/dotfiles

export PATH=/usr/local/bin:$MYSQL_HOME/bin:$M2_HOME/bin:$PATH
export PATH=$GPG_HOME/bin:$GIT_UTILS_HOME/:$PATH
export PATH=/Developer/usr/bin:$PATH

export HISTCONTROL=ignoredups
export LSCOLORS="hx"
export EDITOR="mvim -N -f"
export MVN_OPTS="-client"
# export COMMAND_MODE=unix2003

export WORKON_HOME=$HOME/.virtualenvs
# source /Library/Frameworks/Python.framework/Versions/2.7/bin/virtualenvwrapper.sh
source /usr/local/bin/virtualenvwrapper.sh

export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad

PS1='[\u@\h \W$(__git_ps1 " (%s)")]\$ '

alias ls='ls -G'
alias apg='apg -M SNCL'
alias flush_dns_cache='dscacheutil -flushcache'

# virtualenv aliases
# http://blog.doughellmann.com/2010/01/virtualenvwrapper-tips-and-tricks.html
alias v='workon'
alias v.deactivate='deactivate'
alias v.mk='mkvirtualenv --no-site-packages'
alias v.mk_withsitepackages='mkvirtualenv'
alias v.rm='rmvirtualenv'
alias v.switch='workon'
alias v.add2virtualenv='add2virtualenv'
alias v.cdsitepackages='cdsitepackages'
alias v.cd='cdvirtualenv'
alias v.lssitepackages='lssitepackages'

shopt -s progcomp

_myprog() {
    local curw
    COMPREPLY=()
    curw=${COMP_WORDS[COMP_CWORD]}
    COMPREPLY=($(compgen -A user -- $curw))
    return 0
}

complete -F _myprog -o dirnames myprog

#------------------------------------
# Moonshine Recipe File Management
#------------------------------------

MOONSHINE_TXT="/tmp/moonshine-recipe.txt"
MOONSHINE_TXT_ASC="$HOME/Google Drive/moonshine-recipe.txt.asc"

function pwe {
    gpg --no-use-agent --decrypt -o "${MOONSHINE_TXT}" "${MOONSHINE_TXT_ASC}";
    vim ${MOONSHINE_TXT};
    gpg --no-use-agent -i -a -c -o "${MOONSHINE_TXT_ASC}" --cipher-algo AES256 "${MOONSHINE_TXT}"; 
    rm -f ${MOONSHINE_TXT};
}

function greppw {
    gpg --no-use-agent --decrypt "${MOONSHINE_TXT_ASC}" | grep -i --color=auto -C 6 "$*";
}


#------------------------------------
# Misc Functions
#------------------------------------

function pman {
    man -t "${1}" | open -f -a /Applications/Preview.app
}

function vman {
    MANWIDTH=80 MANPAGER='col -bx' man $@ | mvim -
}

function restart_tomcat {

    TOMCAT_RS_SLEEP=3;

    if [[ -z ${1} ]] ; then
        echo "Usage: restart_tomcat <some_pattern_matching_catalina_home>";
        return -1;
    fi

    process=`ps aux | grep ${1} | grep -v grep | grep -v bash`;

    if [[ -z ${process} ]] ; then
        echo "No tomcat instances found matching that pattern...";
        return -1;
    fi

    catalina_home_regex="-Dcatalina.home=([[:punct:][:alnum:]\/\-]*)";
    pid_regex="^([[:alpha:]]+)[[:space:]]+([[:digit:]]+)";

    if [[ $process =~ $catalina_home_regex ]] ; then
        catalina_home=${BASH_REMATCH[1]};
    fi

    if [[ $process =~ $pid_regex ]] ; then
        user=${BASH_REMATCH[1]};
        pid=${BASH_REMATCH[2]};
    fi

    echo "";
    echo "-----------------------------------------";
    echo "Found the following tomcat(s) to restart:";
    echo "-----------------------------------------";
    echo "";
    echo "${process}";
    echo "";
    echo "Hit Ctrl+C to cancel with in ${TOMCAT_RS_SLEEP} seconds...";
    echo "";

    sleep ${TOMCAT_RS_SLEEP};

    echo "Stopping ${catalina_home}...(PID=${pid})";
    sudo -u ${user} kill -9 ${pid};
    sleep 3;
    echo "";
    echo "Starting ${catalina_home}...";
    ${catalina_home}/bin/startup.sh;
    echo "";

}

## Prevent the creation of .DS_Store
## files on Network volumes in MacOS:
## (Restart the computer for the change to take effect)

# defaults write com.apple.desktopservices DSDontWriteNetworkStores true
# /System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine -background &

